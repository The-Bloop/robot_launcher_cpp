<?xml version="1.0" ?>
<sdf version='1.7'>
  <model name='wrv3'>
    <!--<pose relative_to="__model__">0.0 0.0 0.0 0.0 0.0 0.0</pose>-->

    <!--LINKS-->

    <link name='base_footprint'>
    </link>

    <link name='base_link'>
      <pose relative_to='base_joint'>0 0 0.0875 0 -0 0</pose>
      <inertial>
        <pose>0 0 0.0875 0 -0 0</pose>
        <mass>6.935</mass>
        <inertia>
          <ixx>0.026</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.055</iyy>
          <iyz>0</iyz>
          <izz>0.075</izz>
        </inertia>
      </inertial>
      <collision name='base_link_collision'>
        <pose>0 0 0.0875 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/base_link.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='base_link_visual'>
        <pose>0 0 0.0875 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/base_link.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/White</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <link name='imu_link'>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>200</update_rate>
				<!--<visualize>true</visualize>-->
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
								<bias_mean>0.0000075</bias_mean>
            		<bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
								<bias_mean>0.0000075</bias_mean>
            		<bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
								<bias_mean>0.0000075</bias_mean>
          			<bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
								<bias_mean>0.1</bias_mean>
            		<bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
								<bias_mean>0.1</bias_mean>
            		<bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
								<bias_mean>0.1</bias_mean>
            		<bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="wrv3_imu" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <!-- <namespace>/wrv3</namespace> -->
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>

    <link name='camera_link'>
      <pose relative_to='camera_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.116</mass>
        <inertia>
          <ixx>0.000103</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1.47e-05</iyy>
          <iyz>0</iyz>
          <izz>0.000105</izz>
        </inertia>
      </inertial>
      <collision name='camera_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/camera.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='camera_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/camera.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <link name="camera_color_link">
      <pose relative_to='camera_optical_joint'>0 0 0 0 0 0</pose>
			<sensor name='color_camera' type='camera'>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>30</update_rate>
        <camera name='camera'>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='camera_driver' filename='libgazebo_ros_camera.so'>
        </plugin>
      </sensor>
		</link>

    <link name='base_scan'>
      <pose relative_to='lidar_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.232</mass>
        <inertia>
          <ixx>0.00011</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>3.09e-05</iyy>
          <iyz>0</iyz>
          <izz>0.00011</izz>
        </inertia>
      </inertial>
      <collision name='base_scan_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/lidar.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='base_scan_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/lidar.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Green</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <sensor name='lidar' type='ray'>
        <always_on>1</always_on>
        <visualize>1</visualize>
        <update_rate>30</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.12</min>
            <max>3.5</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name='scan' filename='libgazebo_ros_ray_sensor.so'>
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
        </plugin>
      </sensor>
    </link>

    <link name='wheell_link'>
      <pose relative_to='wheell_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.303</mass>
        <inertia>
          <ixx>0.000205</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000205</iyy>
          <iyz>0</iyz>
          <izz>0.000758</izz>
        </inertia>
      </inertial>
      <collision name='wheell_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='wheell_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <link name='wheelr_link'>
      <pose relative_to='wheelr_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.303</mass>
        <inertia>
          <ixx>0.000205</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000205</iyy>
          <iyz>0</iyz>
          <izz>0.000758</izz>
        </inertia>
      </inertial>
      <collision name='wheelr_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='wheelr_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <link name='wheeldl_link'>
      <pose relative_to='wheeldl_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.303</mass>
        <inertia>
          <ixx>0.000205</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000205</iyy>
          <iyz>0</iyz>
          <izz>0.000758</izz>
        </inertia>
      </inertial>
      <collision name='wheeldl_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='wheeldl_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <link name='wheeldr_link'>
      <pose relative_to='wheeldr_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <mass>0.303</mass>
        <inertia>
          <ixx>0.000205</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000205</iyy>
          <iyz>0</iyz>
          <izz>0.000758</izz>
        </inertia>
      </inertial>
      <collision name='wheeldr_link_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='wheeldr_link_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.01 0.01 0.01</scale>
            <uri>model://wrv3/meshes/wheel.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <!--JOINTS-->

    <joint name='base_joint' type='fixed'>
      <pose relative_to="base_footprint">0 0 0.0 0 -0 0</pose>
      <parent>base_footprint</parent>
      <child>base_link</child>
    </joint>

    <joint name='imu_joint' type='fixed'>
      <pose relative_to='base_link'>0 0 0.0875 0 0 0</pose>
      <parent>base_link</parent>
      <child>imu_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='camera_joint' type='fixed'>
      <pose relative_to='base_link'>0.165 0 0.0875 0 -0 0</pose>
      <parent>base_link</parent>
      <child>camera_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='camera_optical_joint' type='fixed'>
      <pose relative_to='camera_link'>0.015 0 0 0 0 0</pose>
      <parent>camera_link</parent>
      <child>camera_color_link</child>
    </joint>

    <!--<joint name='casterh_joint' type='fixed'>
      <pose relative_to='base_link'>0.1 0 0.05 0 -0 0</pose>
      <parent>base_link</parent>
      <child>casterh_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>-->

    <!--<joint name='casterw_joint' type='fixed'>
      <pose relative_to='base_link'>0.1 0 0.03 0 -0 0</pose>
      <parent>base_link</parent>
      <child>casterw_link</child>
    </joint>-->

    <joint name='lidar_joint' type='fixed'>
      <pose relative_to='base_link'>0.1 0 0.14 0 -0 0</pose>
      <parent>base_link</parent>
      <child>base_scan</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='wheell_joint' type='revolute'>
      <pose relative_to='base_link'>-0.1 0.1125 0.05 1.571 -0 0</pose>
      <parent>base_link</parent>
      <child>wheell_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='wheelr_joint' type='revolute'>
      <pose relative_to='base_link'>-0.1 -0.1125 0.05 -1.571 0 0</pose>
      <parent>base_link</parent>
      <child>wheelr_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='wheeldl_joint' type='revolute'>
      <pose relative_to='base_link'>0.1 0.1125 0.05 1.571 -0 0</pose>
      <parent>base_link</parent>
      <child>wheeldl_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='wheeldr_joint' type='revolute'>
      <pose relative_to='base_link'>0.1 -0.1125 0.05 -1.571 0 0</pose>
      <parent>base_link</parent>
      <child>wheeldr_link</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!--PLUGINS-->

    <plugin name='wrv3_diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <!-- <namespace>/wrv3</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <left_joint>wheell_joint</left_joint>
      <right_joint>wheelr_joint</right_joint>

      <wheel_separation>0.2</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <publish_odom>1</publish_odom>
      <publish_odom_tf>1</publish_odom_tf>
      <publish_wheel_tf>0</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>

    <plugin name='wrv3_joint_state' filename='libgazebo_ros_joint_state_publisher.so'>
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheell_joint</joint_name>
      <joint_name>wheelr_joint</joint_name>
    </plugin>

  </model>
</sdf>

<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from wrv3.xacro                     | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="wrv3">
  <material name="pet">
    <color rgba="0.700 0.700 0.700 1.000"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>
  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="blue">
    <color rgba="0 0 1 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <link name="world"/>
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0"/>
    <parent link="world"/>
    <child link="base_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.0875"/>
      <mass value="6.935"/>
      <inertia ixx="0.026" ixy="0" ixz="0" iyy="0.055" iyz="0" izz="0.075"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.0875"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/base_link.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="white"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0875"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/base_link.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheell_joint" type="continuous">
    <origin rpy="1.571 0 0" xyz="-0.1 0.1125 0.05"/>
    <parent link="base_link"/>
    <child link="wheell_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheell_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.303"/>
      <inertia ixx="2.05e-04" ixy="0" ixz="0" iyy="2.05e-04" iyz="0" izz="7.58e-04"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheelr_joint" type="continuous">
    <origin rpy="-1.571 0 0" xyz="-0.1 -0.1125 0.05"/>
    <parent link="base_link"/>
    <child link="wheelr_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheelr_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.303"/>
      <inertia ixx="2.05e-04" ixy="0" ixz="0" iyy="2.05e-04" iyz="0" izz="7.58e-04"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheeldl_joint" type="continuous">
    <origin rpy="1.571 0 0" xyz="0.1 0.1125 0.05"/>
    <parent link="base_link"/>
    <child link="wheeldl_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheeldl_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.303"/>
      <inertia ixx="2.05e-04" ixy="0" ixz="0" iyy="2.05e-04" iyz="0" izz="7.58e-04"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="wheeldr_joint" type="continuous">
    <origin rpy="-1.571 0 0" xyz="0.1 -0.1125 0.05"/>
    <parent link="base_link"/>
    <child link="wheeldr_link"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="wheeldr_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.303"/>
      <inertia ixx="2.05e-04" ixy="0" ixz="0" iyy="2.05e-04" iyz="0" izz="7.58e-04"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/wheel.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.165 0 0.0875"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.116"/>
      <inertia ixx="1.47e-05" ixy="0" ixz="0" iyy="1.03e-04" iyz="0" izz="1.05e-04"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/camera.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/camera.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_optical_joint" type="fixed">
    <origin rpy="0 1.57 0" xyz="0.015 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_color_link"/>
  </joint>
  <link name="camera_color_link"/>
  <joint name="lidar_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.1 0 0.14"/>
    <parent link="base_link"/>
    <child link="base_scan"/>
  </joint>
  <link name="base_scan">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.232"/>
      <inertia ixx="1.1e-04" ixy="0" ixz="0" iyy="1.1e-04" iyz="0" izz="3.09e-05"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/lidar.stl" scale="0.01 0.01 0.01"/>
      </geometry>
      <material name="green"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_launcher_cpp/meshes/lidar.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0875"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <link name="imu_link">
</link>
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>
  <gazebo reference="wheell_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="wheelr_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="wheeldl_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="wheeldr_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="base_scan">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="camera_color_link">
    <sensor name="color_camera" type="camera">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>30</update_rate>
      <camera name="camera">
        <horizontal_fov>1.02974</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_driver">
        </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="base_scan">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="scan">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>base_scan</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <plugin filename="libgazebo_ros_imu_sensor.so" name="wrv3_imu">
        <ros>
          <!--<namespace>/wrv2</namespace>-->
          <remapping>~/out:=imu</remapping>
        </ros>
        <!--<initial_orientation_as_reference>true</initial_orientation_as_reference>-->
      </plugin>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="wrv3_diff_drive">
      <ros>
        <!--<namespace>/wrv3</namespace>-->
      </ros>
      <update_rate>30</update_rate>
      <!-- wheels -->
      <left_joint>wheell_joint</left_joint>
      <right_joint>wheelr_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>0.2</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="wrv3_joint_state">
      <ros>
        <!-- <namespace>/wrv3</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheell_joint</joint_name>
      <joint_name>wheelr_joint</joint_name>
    </plugin>
  </gazebo>
</robot>
